<header id="banner" class="wrapper">
  <div class="inner">
    <h2 id="banner-title">{{ page.subtitle }}</h2>
    <div id="banner-start">
      <span id="banner-start-command">{{ page.install }}</span><a id="banner-start-link" href="docs/"><i class="fa fa-arrow-right"></i></a>
    </div>
    <div id="banner-share">{{ partial('partial/badges') }}</div>
  </div>
</header>
<div id="content-wrap">
  <div class="wrapper">
    <div class="inner">
      {{ page.content }}
      <div id="intro-get-started-wrap">
        <a href="docs/getting-started.html" id="intro-get-started-link">{{ __('index.get-started') }}</a>
      </div>
      <div class="article-content" itemprop="articleBody" style="max-width: 710px;margin: 0 auto;">
        <figure class="highlight typescript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// Import Bunjil and the Policy Types</span></span><br><span class="line"><span class="keyword">import</span> { Bunjil, Policy, PolicyCondition, PolicyEffect } <span class="keyword">from</span> <span class="string">"bunjil"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a schema</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeDefs: <span class="built_in">string</span> = <span class="string">`</span></span><br><span class="line"><span class="string">  type User {</span></span><br><span class="line"><span class="string">    id: ID</span></span><br><span class="line"><span class="string">    name: String</span></span><br><span class="line"><span class="string">    password: String</span></span><br><span class="line"><span class="string">    posts(limit: Int): [Post]</span></span><br><span class="line"><span class="string">  }</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  type Post {</span></span><br><span class="line"><span class="string">    id: ID</span></span><br><span class="line"><span class="string">    title: String</span></span><br><span class="line"><span class="string">    views: Int</span></span><br><span class="line"><span class="string">    author: User</span></span><br><span class="line"><span class="string">  }</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  type Query {</span></span><br><span class="line"><span class="string">    author(id: ID): User</span></span><br><span class="line"><span class="string">    topPosts(limit: Int): [Post]</span></span><br><span class="line"><span class="string">  }</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Resolvers are not shown in this example.</span></span><br><span class="line"><span class="keyword">const</span> schema = makeExecutableSchema({</span><br><span class="line">  typeDefs,</span><br><span class="line">  resolvers,</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a simple policy allowing public access to the data</span></span><br><span class="line"><span class="keyword">const</span> policies: Policy[] = [</span><br><span class="line">    {</span><br><span class="line">        id: <span class="string">'public:read-all'</span>,</span><br><span class="line">        resources: [<span class="string">"Query::topPosts"</span>, <span class="string">"Post::*"</span>, <span class="string">"User::*"</span>],</span><br><span class="line">        actions: [<span class="string">"query"</span>],</span><br><span class="line">        effect: PolicyEffect.Allow,</span><br><span class="line">        roles: [<span class="string">"*"</span>],</span><br><span class="line">    },</span><br><span class="line">    {   <span class="comment">// Explicitly deny access to the password field.</span></span><br><span class="line">        <span class="comment">// This will superseed any other policy</span></span><br><span class="line">        id: <span class="string">'deny:user::password'</span>,</span><br><span class="line">        resources: [<span class="string">"User::password"</span>],</span><br><span class="line">        actions: [<span class="string">"query"</span>],</span><br><span class="line">        effect: PolicyEffect.Deny,</span><br><span class="line">        roles: [<span class="string">"*"</span>],</span><br><span class="line">    },</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create our bunjil server</span></span><br><span class="line"><span class="keyword">const</span> bunjil: Bunjil = <span class="keyword">new</span> Bunjil({</span><br><span class="line">    <span class="comment">// Server config</span></span><br><span class="line">    server: {</span><br><span class="line"><br><span class="line">        port: <span class="number">3000</span>,</span><br><span class="line">        tracing: <span class="literal">true</span>,</span><br><span class="line">        cacheControl: <span class="literal">true</span>,</span><br><span class="line">    },</span><br><span class="line">    <span class="comment">// Optionally in DEV you can enable the GraphQL playground</span></span><br><span class="line">    playgroundOptions: {</span><br><span class="line">        enabled: <span class="literal">false</span>,</span><br><span class="line">    },</span><br><span class="line">    <span class="comment">// Set the endpoints where GraphQL is available at</span></span><br><span class="line">    endpoints: {</span><br><span class="line">        graphQL: <span class="string">"/graphql"</span>,</span><br><span class="line">        subscriptions: <span class="string">"/graphql/subscriptions"</span>,</span><br><span class="line">        playground: <span class="string">"/playground"</span>,</span><br><span class="line">    },</span><br><span class="line">    policies,</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add our schema to the Bunjil instance</span></span><br><span class="line">bunjil.addSchema({ schemas: [schema] });</span><br><span class="line"></span><br><span class="line"><span class="comment">// Now start Bunjil</span></span><br><span class="line"><span class="keyword">await</span> bunjil.start();</span><br></pre></td></tr></tbody></table></figure>      </div>
        <br />
        <br />
        <br />
        <br />
    </div>
  </div>
</div>
